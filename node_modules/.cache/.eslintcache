[{"/Users/tylerhooks/tyler-portfolio/src/index.js":"1","/Users/tylerhooks/tyler-portfolio/src/reportWebVitals.js":"2","/Users/tylerhooks/tyler-portfolio/src/App.js":"3","/Users/tylerhooks/tyler-portfolio/src/components/Contact.js":"4","/Users/tylerhooks/tyler-portfolio/src/components/Projects.js":"5","/Users/tylerhooks/tyler-portfolio/src/components/Navbar.js":"6","/Users/tylerhooks/tyler-portfolio/src/components/About.js":"7","/Users/tylerhooks/tyler-portfolio/src/components/Skills.js":"8","/Users/tylerhooks/tyler-portfolio/src/components/Experience.js":"9","/Users/tylerhooks/tyler-portfolio/src/data.js":"10","/Users/tylerhooks/tyler-portfolio/src/components/Toggle.js":"11","/Users/tylerhooks/tyler-portfolio/src/components/themeContext.js":"12"},{"size":734,"mtime":1661981768139,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1661976242818,"results":"15","hashOfConfig":"14"},{"size":529,"mtime":1661981094160,"results":"16","hashOfConfig":"14"},{"size":4573,"mtime":1661976242814,"results":"17","hashOfConfig":"14"},{"size":2197,"mtime":1661976242815,"results":"18","hashOfConfig":"14"},{"size":1149,"mtime":1661981830306,"results":"19","hashOfConfig":"14"},{"size":3282,"mtime":1661981936625,"results":"20","hashOfConfig":"14"},{"size":1299,"mtime":1661976242815,"results":"21","hashOfConfig":"14"},{"size":1920,"mtime":1661976242815,"results":"22","hashOfConfig":"14"},{"size":3052,"mtime":1661977229885,"results":"23","hashOfConfig":"14"},{"size":1662,"mtime":1661981384234,"results":"24","hashOfConfig":"14"},{"size":1182,"mtime":1661981124099,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qra8fg",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tylerhooks/tyler-portfolio/src/index.js",[],"/Users/tylerhooks/tyler-portfolio/src/reportWebVitals.js",[],["54","55"],"/Users/tylerhooks/tyler-portfolio/src/App.js",[],"/Users/tylerhooks/tyler-portfolio/src/components/Contact.js",["56","57","58"],"import React from \"react\";\n\nexport default function Contact() {\n  const [name, setName] = React.useState(\"\"); \n  const [email, setEmail] = React.useState(\"\"); \n  const [message, setMessage] = React.useState(\"\"); \n\n  function encode(data) {\n    return Object.keys(data)\n      .map(\n        (key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])\n      )\n      .join(\"&\");\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({ \"form-name\": \"contact\", name, email, message }),\n    })\n      .then(() => alert(\"Message sent!\"))\n      .catch((error) => alert(error));\n  }\n  \n  return (\n    <section id=\"contact\" className=\"relative\">\n      <div className=\"container px-5 py-10 mx-auto flex sm:flex-nowrap flex-wrap\">\n        <div className=\"hidden lg:w-2/3 md:w-1/2 md:block rounded-lg overflow-hidden sm:mr-10 p-10 flex items-end justify-start relative\">\n          <iframe\n            width=\"100%\"\n            height=\"100%\"\n            title=\"map\"\n            className=\"absolute inset-0\"\n            frameBorder={0}\n            marginHeight={0}\n            marginWidth={0}\n            style={{ filter: \"opacity(0.7)\" }}\n            src=\"https://maps.google.com/maps?q=Austin,%20Texas&t=&z=13&ie=UTF8&iwloc=&output=embed\"\n          />\n          <div className=\"bg-burntorange absolute bottom-3 left-3 flex flex-wrap p-6 rounded shadow-md lg:w-1/2\">\n            <div className=\"px-4 lg:mt-0\">\n              <h2 className=\"title-font font-semibold text-white tracking-widest text-xs\">\n                EMAIL\n              </h2>\n              <a className=\"text-indigo-400 leading-relaxed\">\n                tylerhooks8@gmail.com\n              </a>\n              <h2 className=\"title-font font-semibold text-white tracking-widest text-xs mt-4\">\n                PHONE\n              </h2>\n              <p className=\"leading-relaxed\">281-656-1814</p>\n            </div>\n          </div>\n        </div>\n        <form\n          name=\"contact\"\n          method=\"POST\"\n          netlify \n          onSubmit = {handleSubmit}\n          className=\"xl:w-2/5 lg:w-1/3 md:w-1/2 flex flex-col md:ml-auto w-full md:py-8 mt-8 md:mt-0\">\n          <h2 className=\"sm:text-4xl text-3xl mb-1 font-medium title-font\">\n            Let's Connect\n          </h2>\n          <p className=\"leading-relaxed mb-5\">\n            I am currently based in the Austin, Texas area and would love to learn more about any future opportunities.\n          </p>\n          <div className=\"relative mb-4\">\n            <label htmlFor=\"name\" className=\"leading-7 text-sm\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"w-full bg-cream rounded border border-burntorange focus:border-burntorange focus:ring-2 focus:ring-burnorange text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"relative mb-4\">\n            <label htmlFor=\"email\" className=\"leading-7 text-sm\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              className=\"w-full bg-cream-light rounded border border-burntorange  focus:border-burntorange focus:ring-2 focus:ring-burnorange text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"relative mb-4\">\n            <label\n              htmlFor=\"message\"\n              className=\"leading-7 text-sm\">\n              Message\n            </label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              className=\"w-full bg-cream-light rounded border border-burntorange  focus:border-burntorange focus:ring-2 focus:ring-burnorange h-32 text-base outline-none text-gray-100 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out\"\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"border-1 bg-burntorange text-cream py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </section>\n\n  );\n\n  \n}","/Users/tylerhooks/tyler-portfolio/src/components/Projects.js",["59"],"import React from \"react\";\nimport { projects } from \"../data\";\nimport { CodeIcon } from \"@heroicons/react/solid\";\n\nexport default function Projects() {\n    return (\n        <section id=\"projects\" className=\"text-gray-400  body-font\">\n            <div className=\"container px-5 py-10 mx-auto text-center lg:px-40\">\n                <div className=\"flex flex-col w-full mt-8 mb-20\">\n                    <CodeIcon className=\"mx-auto inline-block w-10 mb-4 text-burntorange\" />\n                    <h1 className=\"sm:text-4xl text-3xl font-medium title-font mb-4\">\n                        Projects \n                    </h1>\n                    <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n                       Here are a few projects that I have completed. Please contact me if you would like to follow \n                       up and learn more! As always, feedback is welcomed. \n                    </p>\n                </div>\n                <div className=\"flex flex-wrap -m-4\">\n                    {projects.map((project) => (\n                        <a\n                            href={project.link}\n                            target=\"_blank\"\n                            key={project.description}\n                            className=\"sm:w-1/2 w-100 p-4\">\n                            <div className=\"flex relative\">\n                                <div className=\"px-8 py-10 relative z-5 w-full border-4 border-gray-800 bg-gray-900\">\n                            \n                                    <h2 className=\"tracking-widest text-sm title-font font-medium text-green-400 mb-1\">\n                                        {project.subtitle}\n                                    </h2>\n                                    <h1 className=\"title-font text-lg font-medium text-burntorange mb-3\">\n                                        {project.title}\n                                    </h1>\n                                    <p className=\"leading-relaxed\">{project.description}</p>\n                                </div>\n                            </div>\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </section>\n    );\n\n}","/Users/tylerhooks/tyler-portfolio/src/components/Navbar.js",[],"/Users/tylerhooks/tyler-portfolio/src/components/About.js",["60","61","62"],"/Users/tylerhooks/tyler-portfolio/src/components/Skills.js",[],"/Users/tylerhooks/tyler-portfolio/src/components/Experience.js",["63","64"],"import React from \"react\";\nimport { experience } from \"../data\";\nimport Resume from \"../documents/Tyler_Hooks_Resume.pdf\";\nimport { BriefcaseIcon, CodeIcon } from \"@heroicons/react/solid\";\n\nexport default function Experience() {\n    return (\n        <section id=\"experience\">\n            <div className=\"container px-10 py-10 mx-auto text-center\">\n                <div className=\"flex flex-col w-full mt-8 mb-20\">\n                    <BriefcaseIcon className=\"mx-auto inline-block w-10 mb-4 text-burntorange\" />\n                    <h1 className=\"sm:text-4xl text-3xl font-medium title-font mb-6\">\n                        Work Experience\n                    </h1>\n                    <div>\n                        {experience.map((experience) => (\n                            <div className=\"lg:w-2/3 mx-auto leading-relaxed text-base\n                            lg:w-2/3 mx-auto leading-relaxed text-base\">\n                                <div className=\"flex justify-between mb-3\">\n                                    <div className=\"text-left\">\n                                        <h2 className=\"font-medium text-lg text-burntorange\">{experience.role}</h2>\n                                        <p className=\"font-medium\">{experience.company}</p>\n                                    </div>\n                                    <p className=\"text-right self-end\">{experience.date}</p>\n                                </div>\n                                <p>{experience.description}</p>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <a\n              href={Resume}\n              target = \"_blank\"\n              className=\"inline-flex text-cream bg-burntorange border-1 py-2 px-6 focus:outline-none hover:bg-green-600 rounded text-lg text-center\">\n              Resume\n            </a>\n            </div>\n        </section>\n    )\n}","/Users/tylerhooks/tyler-portfolio/src/data.js",[],"/Users/tylerhooks/tyler-portfolio/src/components/Toggle.js",[],"/Users/tylerhooks/tyler-portfolio/src/components/themeContext.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":17,"nodeType":"71","messageId":"72","endLine":5,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":6,"column":19,"nodeType":"71","messageId":"72","endLine":6,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":47,"column":15,"nodeType":"76","endLine":47,"endColumn":62},{"ruleId":"77","severity":1,"message":"78","line":21,"column":25,"nodeType":"76","messageId":"79","endLine":25,"endColumn":60,"fix":"80"},{"ruleId":"81","severity":1,"message":"82","line":24,"column":15,"nodeType":"76","endLine":26,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":38,"column":39,"nodeType":"76","messageId":"79","endLine":38,"endColumn":137,"fix":"83"},{"ruleId":"81","severity":1,"message":"82","line":55,"column":11,"nodeType":"76","endLine":57,"endColumn":13},{"ruleId":"69","severity":1,"message":"84","line":4,"column":25,"nodeType":"71","messageId":"72","endLine":4,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":31,"column":17,"nodeType":"76","messageId":"79","endLine":34,"endColumn":150,"fix":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'setEmail' is assigned a value but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"88","text":"89"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"90","text":"89"},"'CodeIcon' is defined but never used.",{"range":"91","text":"89"},"no-global-assign","no-unsafe-negation",[1273,1273]," rel=\"noreferrer\"",[2285,2285],[1835,1835]]